<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pete Talbert</title>
    <link>/</link>
    <description>Recent content on Pete Talbert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 02 Oct 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Working with web data in R part I - Scraping HTML tables</title>
      <link>/post/working-with-web-data-in-r-part-i-scraping-html-tables/</link>
      <pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/working-with-web-data-in-r-part-i-scraping-html-tables/</guid>
      <description>In this short post, I am going to introduce you to web scraping in R using the rvest package. In another post (part II), I’ll show you maybe the most popular method for pulling data from the web: using a web API.</description>
    </item>
    
    <item>
      <title>Install R and RStudio on Mac</title>
      <link>/post/install-r-and-rstudio-on-mac/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/install-r-and-rstudio-on-mac/</guid>
      <description>Watch the YouTube video below to learn how to install R and RStudio on a Mac.
  </description>
    </item>
    
    <item>
      <title>Shiny App Test</title>
      <link>/post/shiny-app-test/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/shiny-app-test/</guid>
      <description>This is a test that I can successfully embed a Shiny app (in this case a tutorial using the learnr package) in my blog.
</description>
    </item>
    
    <item>
      <title>COVID-19 New York Times plots</title>
      <link>/post/covid-19-new-york-times-plots/</link>
      <pubDate>Sun, 12 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/covid-19-new-york-times-plots/</guid>
      <description>The New York Times has produced some really great maps and plots in its efforts to track the coronavirus in the U.S. One plot in particular that caught my attention is the histogram (actually more like a bar plot) of new cases with a 7-day average line overlayed found at the top of this page.</description>
    </item>
    
    <item>
      <title>Connecting to MAMP install of MySQL in R</title>
      <link>/post/connecting-to-mamp-install-of-mysql-in-r/</link>
      <pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/connecting-to-mamp-install-of-mysql-in-r/</guid>
      <description>In the course of doing a web dev tutorial (namely Tania Rascia’s great post on building a simple CRUD app) I had to install MAMP. This gives you a local server environment consisting of Apache, MySQL, and PHP.</description>
    </item>
    
    <item>
      <title>Learning bash</title>
      <link>/post/learning-bash/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/learning-bash/</guid>
      <description>Hello all!
So I just bought a used MacBook Pro in order to learn Linux, bash, shell scripting, etc. This post is just to test that I can write bash code in an .</description>
    </item>
    
    <item>
      <title>For loops for quick summaries in R</title>
      <link>/post/for-loops-for-quick-summaries-in-r/</link>
      <pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/for-loops-for-quick-summaries-in-r/</guid>
      <description>Because I often work with categorical data, I find myself making lots of quick, sorted counts of variables in a dataset. I find that this is a really common technique to get to know a dataset you’re working with; I’ve also noticed David Robinson do it often in his screencasts.</description>
    </item>
    
    <item>
      <title>Consulting Services</title>
      <link>/post/consulting-services/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/consulting-services/</guid>
      <description>Hello all!
I have not posted on this site since March, and I feel terrible about it. I know no one reads this, but personally it was a goal of mine to keep my skills up-to-date by forcing myself to blog about them.</description>
    </item>
    
    <item>
      <title>Services</title>
      <link>/services/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/services/</guid>
      <description>I am a data analyst in the Twin Cities, specializing in the K-12, higher education, and non-profit sectors. I have worked in the field for over four years, and know both the database and analytical/visualization components deeply.</description>
    </item>
    
    <item>
      <title>Window Functions in SQL vs. R</title>
      <link>/post/window-functions-in-sql-vs-r/</link>
      <pubDate>Sat, 02 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/window-functions-in-sql-vs-r/</guid>
      <description>Both MS SQL Server and R’s dplyr package offer window functions for different operations on a dataset. What are window functions? Window functions operate on a set of rows or “window” and return a value for each row, whether that’s something like a row number or percentile rank, or an aggregate result from a min, max, average, or sum.</description>
    </item>
    
  </channel>
</rss>