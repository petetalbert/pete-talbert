<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Pete Talbert</title>
    <link>/categories/r/</link>
    <description>Recent content in R on Pete Talbert</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 10 Dec 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Learning For Loops in R</title>
      <link>/post/learning-for-loops-in-r/</link>
      <pubDate>Mon, 10 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/learning-for-loops-in-r/</guid>
      <description>So I’m very much a noob when it comes to any formal programming. So I feel like my first real practice should be with for loops, which are a staple of programming concepts.
Much of what is below is taken from Hadley Wickham’s R for Data Science, in particular, Chapter 21 on iteration.
Baumann datasetI’m going to use the one of the datasets that comes with the car package, called Baumann.</description>
    </item>
    
    <item>
      <title>Pivoting Data in SQL vs. R</title>
      <link>/post/pivoting-data-in-sql-vs-r/</link>
      <pubDate>Thu, 22 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/pivoting-data-in-sql-vs-r/</guid>
      <description>IntroOften with education data, I need to pivot data to go from long format to wide. For instance, I often have test scores for different test subjects of a single assessment. For one student, I will have to rows, one for one subject and one for another. This also happens for strands and domains of a test.
library(tidyverse)library(DBI)library(odbc)library(knitr)con &amp;lt;- dbConnect(odbc::odbc(), &amp;quot;nicodemus&amp;quot;)query &amp;lt;- dbSendQuery(con, &amp;quot;select * from Demo.</description>
    </item>
    
    <item>
      <title>Connecting to MS SQL Server in R</title>
      <link>/post/connecting-to-ms-sql-server-in-r/</link>
      <pubDate>Thu, 15 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/connecting-to-ms-sql-server-in-r/</guid>
      <description>There are dozens of ways to connect to an MS SQL Server database in R. You can use a number of packages, and within those packages, there are various methods for connecting and running SQL queries via an R script.
The easiest method I’ve found for a traditional Windows user with access to an MS SQL Server instance is what I’m going to demonstrate.
Setting up a System DSNIn Windows, if you hit the start menu and search for “odbc”, you’ll get an app called “ODBC Data Source Administrator (64-bit).</description>
    </item>
    
    <item>
      <title>Can I Write SQL in R Markdown?</title>
      <link>/post/can-i-write-sql-in-r-markdown/</link>
      <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/can-i-write-sql-in-r-markdown/</guid>
      <description>Hello!
This is my very first post; just a quick test as to how a SQL snippet shows in a markdown file and on a website. See below.
select personID, endYear, grade, ROW_NUMBER() over (partition by personID order by endYear, case when grade = &amp;#39;KG&amp;#39; then &amp;#39;00&amp;#39; else grade end) as rowNumfrom #enroll3</description>
    </item>
    
  </channel>
</rss>